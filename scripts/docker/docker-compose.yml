version: '3.8'

services:
  koalablog:
    build:
      context: ../../
      dockerfile: scripts/docker/Dockerfile
      target: runtime
    container_name: koalablog-app
    restart: unless-stopped
    ports:
      - "4321:4321"
    environment:
      - NODE_ENV=production
      - DATA_SOURCE=sqlite
      - DEPLOY_MODE=standalone
      - SQLITE_URL=/app/data/koala.db
      - HOST=0.0.0.0
      - PORT=4321
    volumes:
      # Persistent data storage
      - koalablog-data:/app/data
      - koalablog-uploads:/app/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:4321/api/health').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - koalablog-network

  # Optional: nginx proxy for production
  nginx:
    image: nginx:alpine
    container_name: koalablog-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
      - koalablog-uploads:/var/www/uploads:ro
    depends_on:
      koalablog:
        condition: service_healthy
    networks:
      - koalablog-network
    profiles:
      - production

volumes:
  koalablog-data:
    driver: local
  koalablog-uploads:
    driver: local

networks:
  koalablog-network:
    driver: bridge