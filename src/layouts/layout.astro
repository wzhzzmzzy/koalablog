---
import type { CatppuccinTheme } from '@/lib/const/config'
import '@/styles/global.css'
import '@/styles/catppuccin.scss'

const pageConfig = Astro.locals.config.pageConfig
const rssConfig = Astro.locals.config.rss || {}
const lightTheme = pageConfig.theme?.light ?? 'latte'
const darkTheme = pageConfig.theme?.dark ?? 'mocha'
const blogTitle = pageConfig.title || 'Koalablog'
const ThemeBaseColor: Record<CatppuccinTheme, string> = {
  latte: '#eff1f5',
  frappe: '#303446',
  macchiato: '#24273a',
  mocha: '#1e1e2e',
}

const lightThemeColor = ThemeBaseColor[lightTheme]
const darkThemeColor = ThemeBaseColor[darkTheme]
const site = rssConfig.site || Astro.site || Astro.url.origin

function bodyClass(classList: string) {
  return `${classList} ${lightTheme}`
}

---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="generator" content={Astro.generator} />

    <meta
      name="theme-color"
      content={lightThemeColor}
      media="(prefers-color-scheme: light)"
    />
    <meta
      name="theme-color"
      content={darkThemeColor}
      media="(prefers-color-scheme: dark)"
    />
    <link
      rel="alternate"
      type="application/rss+xml"
      title={blogTitle}
      href={new URL('rss.xml', site)}
    />

    <slot name="meta" />
  </head>

  <body class={bodyClass('flex justify-center')}>
    <section
      id="page"
      data-light-theme={lightTheme}
      data-dark-theme={darkTheme}
      data-theme="light"
      class="page box-border px-5 w-screen max-w-200 flex-1 font-[Verdana] flex flex-col"
    >
      <script is:inline>
        const pageEl = document.getElementById('page')
        const { lightTheme, darkTheme } = pageEl.dataset
        const theme = window.localStorage.getItem('theme')
        if (theme === lightTheme || theme === darkTheme) {
          document.body.classList.add(theme)
        }
        else {
          document.body.classList.add(lightTheme)
        }
      </script>
      <slot />
    </section>
  </body>
</html>

<script>
import { switchTheme } from '@/lib/utils/theme'

function handleThemeChange(event: MediaQueryList | MediaQueryListEvent) {
  const pageEl = document.getElementById('page')
  const { lightTheme, darkTheme } = pageEl!.dataset

  if (lightTheme === darkTheme)
    return

  switchTheme(event.matches ? darkTheme! : lightTheme!, event.matches ? 'dark' : 'light')
}

const query = window.matchMedia('(prefers-color-scheme: dark)')
handleThemeChange(query)
query.addEventListener('change', handleThemeChange)
</script>

<script>
(window as any).refreshCopyListener = () => {
  document.querySelectorAll('span.code-lang').forEach((item) => {
    item.addEventListener('click', (window as any).copyCode.bind(window, item));
    (item as HTMLSpanElement).title = 'Copy code'
  })
}
(window as any).copyCode = (item: HTMLSpanElement) => {
  const lang = item.textContent
  const supportClipboard = navigator && 'clipboard' in navigator
  if (supportClipboard) {
    navigator.clipboard.writeText(
      item.nextSibling?.textContent || '',
    ).then(() => {
      item.textContent = 'Copied'
      setTimeout(() => {
        item.textContent = lang
      }, 2000)
    })
  }
}
</script>
