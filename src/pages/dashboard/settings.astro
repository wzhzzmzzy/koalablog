---
import DashboardLayout from '@/layouts/dashboard.astro'
import { settingsHandler } from '@/lib/services/settings'
import { to } from 'await-to-js'

const [formError, formStatus] = await to(settingsHandler(Astro))
const title = Astro.locals.config.pageConfig.title ?? ''
---
<DashboardLayout>
  <h1>Settings</h1>
  <setting-form>

    { formStatus === 'ok' && <div>Saved Success</div> }
    { formError && <div>{formError.message}</div> }

    <form method="POST" class="flex flex-col gap-3">
      <button class="w-12">Save</button>

      <label>
        Blog Title:<br />
        <input class="w-60 sm:w-80" id="title-input" name="title" value={title} />
      </label>

    </form>

    <h2>Utility</h2>

    <section>
      <button id="import-from">Import from ..</button>
      <button id="export-as">Export as ..</button>
    </section>
  </setting-form>
</DashboardLayout>

<script>
import { exportAllFiles } from '@/lib/services/io'

class SettingForm extends HTMLElement {
  titleInputEl: HTMLInputElement
  importFromBtn: HTMLButtonElement
  exportAsBtn: HTMLButtonElement

  constructor() {
    super()
    this.titleInputEl = this.querySelector('#title-input')!
    this.importFromBtn = this.querySelector('#import-from')!
    this.exportAsBtn = this.querySelector('#export-as')!
    this.onInputTitle = this.onInputTitle.bind(this)
    this.connectedCallback()
  }

  connectedCallback() {
    this.titleInputEl.addEventListener('input', this.onInputTitle)
    this.importFromBtn.addEventListener('click', this.onImportFrom)
    this.exportAsBtn.addEventListener('click', this.onExportAs)
  }

  disconnectedCallback() {
    this.titleInputEl.removeEventListener('input', this.onInputTitle)
  }

  onInputTitle(e: Event) {
    const value = (e.target as HTMLInputElement).value
    // eslint-disable-next-line no-console
    console.debug('[koala:debug] title input:', value)
  }

  onImportFrom() {

  }

  onExportAs() {
    exportAllFiles()
  }
}

customElements.define('setting-form', SettingForm)
</script>
