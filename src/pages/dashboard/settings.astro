---
import ExportZip from '@/components/io/export-zip.svelte'
import ImportFile from '@/components/io/import-file.svelte'
import ThemeSwitch from '@/components/settings/theme-switch.svelte'
import DashboardLayout from '@/layouts/dashboard.astro'
import { settingsHandler } from '@/lib/services/settings'
import { to } from 'await-to-js'

const [formError, formStatus] = await to(settingsHandler(Astro))
const pageConfig = Astro.locals.config.pageConfig
const title = pageConfig.title ?? ''
---
<DashboardLayout>
  <h1>Settings</h1>
  <setting-form>

    { formStatus === 'ok' && <p class="success">Saved Success</p> }
    { formError && <p class="error">{formError.message}</p> }

    <form method="POST" class="flex flex-col gap-3">
      <button class="w-12">Save</button>

      <label>
        Blog Title:<br />
      </label>
      <input class="w-60 sm:w-80" id="title-input" name="title" value={title} />

      <label>
      Theme:
      </label>
      <div id="theme-bus" />
      <ThemeSwitch
        client:load
        light={pageConfig.theme?.light}
        dark={pageConfig.theme?.dark}
      />

    </form>

    <h2>Utility</h2>

    <section class="flex gap-3 flex-col">
      <ImportFile client:load />
      <ExportZip client:load />
    </section>
  </setting-form>
</DashboardLayout>

<script>
class SettingForm extends HTMLElement {
  titleInputEl: HTMLInputElement
  themeBusEl: HTMLDivElement

  constructor() {
    super()
    this.titleInputEl = this.querySelector('#title-input')!
    this.themeBusEl = this.querySelector('#theme-bus')!
    this.onInputTitle = this.onInputTitle.bind(this)

    this.connectedCallback()
  }

  connectedCallback() {
    this.titleInputEl.addEventListener('input', this.onInputTitle)
    this.themeBusEl.addEventListener('update-theme', console.log)
  }

  disconnectedCallback() {
    this.titleInputEl.removeEventListener('input', this.onInputTitle)
  }

  onInputTitle(e: Event) {
    const value = (e.target as HTMLInputElement).value
    // eslint-disable-next-line no-console
    console.debug('[koala:debug] title input:', value)
  }
}

customElements.define('setting-form', SettingForm)
</script>
