---
import Editor from '@/components/editor/index.svelte'
import { MarkdownSource, type PostOrPage } from '@/db'
import { initMarkdown, type Markdown } from '@/db/types'
import DashboardLayout from '@/layouts/dashboard.astro'
import { readArticle } from '@/lib/services/article'
import { formHandler } from '@/lib/services/editor'
import { to } from 'await-to-js'

const { link } = Astro.params
const source: PostOrPage = MarkdownSource.Page
const url = Astro.url
const mode = url.searchParams.has('new') ? 'create' : 'update'

const [formError, formStatus] = await to(formHandler(Astro, { source }))

// 如果删除成功，重定向到文章列表页面
if (formStatus === 'deleted') {
  return Astro.redirect('/dashboard')
}

if (formStatus?.startsWith('/')) {
  return Astro.redirect(`/dashboard${formStatus}`)
}

const article: Response | Markdown = mode === 'update'
  ? await readArticle(Astro, source, link!)
  : initMarkdown()

if (article instanceof Response) {
  return article
}
---
<DashboardLayout title={`[Editor] ${article.subject}`}>
  <main>
    <h2>{ mode === 'create' ? 'New Post' : 'Edit' }</h2>

    { formStatus === 'ok' && <div>Saved Success</div> }
    { formError && <div>{formError.message}</div> }

    <Editor client:load source={source} markdown={article} />
  </main>
</DashboardLayout>
