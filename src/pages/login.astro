---
import Layout from '@/layouts/layout.astro'

const redirectTo = Astro.url.searchParams.get('from') || '/'
---
<Layout>
  <login-form data-redirect-to={redirectTo}>
    <form method="POST" class="max-w-md mx-auto mt-10">
      <!-- {errorMessage && ( -->
      <!--   <div class="mb-4 p-4 text-sm text-red-800 rounded-lg bg-red-50" role="alert"> -->
      <!--     {errorMessage} -->
      <!--   </div> -->
      <!-- )} -->
      <div class="mb-6">
        <label for="adminKey" class="block mb-2 text-sm font-medium">Admin Key</label>
        <input
          type="password"
          id="admin-key"
          name="adminKey"
          class="outline-none border-none text-sm block h-10 w-full bg-[--koala-code-bg] color-[--koala-code-text] pl-2"
          placeholder="Input admin key"
          required
        />
      </div>

      <button
        id="login-btn"
        type="submit"
        class="!w-full font-medium rounded-lg text-sm text-center"
      >
        Login, then redirect to {redirectTo}
      </button>
    </form>
  </login-form>
</Layout>


<script>
import to from 'await-to-js'
import consola from 'consola'
import { ofetch } from 'ofetch'

class LoginForm extends HTMLElement {
  loginBtn: HTMLElement | null = null
  adminKeyInput: HTMLInputElement | null = null

  connectedCallback() {
    this.loginBtn = this.querySelector('#login-btn')
    this.adminKeyInput = this.querySelector('#admin-key')
    this.loginBtn?.addEventListener('click', (e) => {
      this.login(e)
    })
  }

  async login(e: Event) {
    e.preventDefault()
    const [err] = await to(ofetch('/api/auth/login', {
      method: 'POST',
      body: {
        adminKey: this.adminKeyInput?.value,
      },
    }))

    if (err) {
      consola.log(err)
      return
    }

    const searchParams = new URLSearchParams(window.location.search)
    const redirectTo = searchParams.get('from') || '/'
    window.location.pathname = redirectTo
  }
}

customElements.define('login-form', LoginForm)
</script>
