---
const redirectTo = Astro.url.searchParams.get('from') || '/'
---
<login-form data-redirect-to={redirectTo}>
  <form method="POST" class="max-w-md mx-auto mt-10">
    <!-- {errorMessage && ( -->
    <!--   <div class="mb-4 p-4 text-sm text-red-800 rounded-lg bg-red-50" role="alert"> -->
    <!--     {errorMessage} -->
    <!--   </div> -->
    <!-- )} -->
    <div class="mb-6">
      <label for="adminKey" class="block mb-2 text-sm font-medium text-gray-900">Admin Key</label>
      <input
        type="password"
        id="admin-key"
        name="adminKey"
        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
        placeholder="Input admin key"
        required
      />
    </div>

    <button
      id="login-btn"
      type="submit"
      class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full px-5 py-2.5 text-center"
    >
      Login, then redirect to {redirectTo}
    </button>
  </form>
</login-form>

<script>
import to from 'await-to-js'
import consola from 'consola'
import { ofetch } from 'ofetch'

class LoginForm extends HTMLElement {
  loginBtn: HTMLElement | null = null
  adminKeyInput: HTMLInputElement | null = null

  connectedCallback() {
    this.loginBtn = this.querySelector('#login-btn')
    this.adminKeyInput = this.querySelector('#admin-key')
    this.loginBtn?.addEventListener('click', (e) => {
      this.login(e)
    })
  }

  async login(e: Event) {
    e.preventDefault()
    const [err] = await to(ofetch('/api/auth/login', {
      method: 'POST',
      body: {
        adminKey: this.adminKeyInput?.value,
      },
    }))

    if (err) {
      consola.log(err)
      return
    }

    const searchParams = new URLSearchParams(window.location.search)
    const redirectTo = searchParams.get('from') || '/'
    window.location.pathname = redirectTo
  }
}

customElements.define('login-form', LoginForm)
</script>
