---
import type { Markdown } from '@/db/types'
import { MarkdownSource } from '@/db'
import { addHeadingIds, extractHeadings } from '@/lib/utils/heading-id'
import { formatDate } from 'date-fns'
import Outline from './outline.svelte'

interface Props {
  article: Markdown
  content: string
  showOutline?: boolean
}

const { article, content, showOutline = false } = Astro.props

const source = article?.source
const contentWithIds = await addHeadingIds(content)
const headings = showOutline ? await extractHeadings(contentWithIds) : []
---
<main class="article-main">
  <div class="article-header">
    {
      source === MarkdownSource.Post
    ? (
    <>
      <h1>{ article.subject }</h1>
      <p>{ formatDate(article.createdAt, 'yyyy-MM-dd') }</p>
    </>
    )
    : (
      <h1>{ article.subject }</h1>
    )
    }
  </div>
  {showOutline && (
    <Outline client:load title={article.subject} headings={headings} />
  )}
  <article id="article" set:html={contentWithIds} />
</main>


