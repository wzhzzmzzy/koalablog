{
  "name": "koalablog",
  "type": "module",
  "version": "0.0.1",
  "packageManager": "pnpm@10.14.0",
  "scripts": {
    "dev:d1": "pnpm run db:clean && wrangler types && cross-env CF_PAGES=1 astro dev",
    "dev:sqlite": "pnpm run sqlite:init && astro dev",
    "dev": "astro dev",
    "build": "astro build",
    "build:cf": "wrangler types && cross-env CF_PAGES=1 astro build",
    "preview": "wrangler types && cross-env CF_PAGES=1 astro preview",
    "preview:pages": "wrangler pages dev dist",
    "astro": "astro",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "test": "vitest run",
    "migration:d1:local": "pnpx wrangler d1 migrations apply DB --local",
    "migration:d1:remote": "pnpx wrangler d1 migrations apply DB --remote",
    "migration:sqlite": "./node_modules/.bin/drizzle-kit migrate && rm -f ./koala.config.json",
    "migration:generate": "./node_modules/.bin/drizzle-kit generate --name=init",
    "d1:clear": "pnpx wrangler d1 execute DB --file ./scripts/db/clear.sql --local",
    "db:clean": "rm -rf ./.wrangler/state && rm -fv ./local.db",
    "d1:info": "pnpx wrangler d1 execute DB --file ./scripts/db/info.sql --local",
    "d1:init": "pnpm run db:clean && pnpm run migration:d1:local",
    "sqlite:init": "pnpm run db:clean && pnpm run migration:sqlite",
    "kv:init": "bash ./scripts/kv/init.sh",
    "docker:build": "docker build -f scripts/docker/Dockerfile -t koalablog:latest .",
    "docker:build:dev": "docker build -f scripts/docker/Dockerfile.dev -t koalablog:dev .",
    "docker:run": "docker run -p 4321:4321 --name koalablog-container -d koalablog:latest",
    "docker:run:dev": "docker run -p 4321:4321 -v $(pwd):/app -v /app/node_modules --name koalablog-dev-container -d koalablog:dev",
    "docker:stop": "docker stop koalablog-container || docker stop koalablog-dev-container",
    "docker:clean": "docker rm koalablog-container || docker rm koalablog-dev-container",
    "docker:logs": "docker logs -f koalablog-container",
    "compose:up": "docker-compose -f scripts/docker/docker-compose.yml up -d",
    "compose:down": "docker-compose -f scripts/docker/docker-compose.yml down",
    "compose:logs": "docker-compose -f scripts/docker/docker-compose.yml logs -f",
    "compose:build": "docker-compose -f scripts/docker/docker-compose.yml build --no-cache",
    "compose:dev": "docker-compose -f scripts/docker/docker-compose.dev.yml up --build",
    "compose:prod": "docker-compose -f scripts/docker/docker-compose.yml --profile production up -d"
  },
  "dependencies": {
    "@astrojs/cloudflare": "^12.0.1",
    "@astrojs/rss": "^4.0.12",
    "@astrojs/svelte": "^7.0.4",
    "@libsql/client": "^0.14.0",
    "@lucide/astro": "^0.546.0",
    "@lucide/svelte": "^0.546.0",
    "@mdit/plugin-katex": "^0.23.1",
    "@shikijs/langs": "^3.2.2",
    "@shikijs/markdown-it": "^3.2.2",
    "@shikijs/themes": "^3.2.2",
    "@tabler/icons-svelte": "^3.34.1",
    "@webtui/css": "^0.0.3",
    "astro": "^5.0.4",
    "astro-meta-tags": "^0.4.0",
    "await-to-js": "^3.0.0",
    "consola": "^3.4.0",
    "date-fns": "^4.1.0",
    "drizzle-orm": "^0.38.4",
    "drizzle-zod": "^0.6.1",
    "es-toolkit": "^1.29.0",
    "fflate": "^0.8.2",
    "jose": "^6.0.10",
    "markdown-it": "^14.1.0",
    "markdown-it-container": "^4.0.0",
    "monaco-editor": "^0.52.2",
    "node-html-parser": "^7.0.1",
    "ofetch": "^1.4.1",
    "shiki": "^3.2.2",
    "svelte": "^5.19.2",
    "typescript": "^5.7.3",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^3.11.2",
    "@cloudflare/vitest-pool-workers": "^0.8.0",
    "@cloudflare/workers-types": "^4.20250424.0",
    "@iconify-json/tabler": "^1.2.15",
    "@types/markdown-it": "^14.1.2",
    "@unocss/preset-icons": "^65.4.3",
    "@unocss/preset-rem-to-px": "^65.4.3",
    "cross-env": "^7.0.3",
    "drizzle-kit": "^0.30.2",
    "eslint": "^9.16.0",
    "eslint-plugin-astro": "^1.3.1",
    "sass": "^1.89.2",
    "sonda": "^0.9.0",
    "unocss": "^65.4.3",
    "unplugin-preprocessor-directives": "^1.0.3",
    "vitest": "~3.0.0",
    "wrangler": "^4.11.0"
  }
}
